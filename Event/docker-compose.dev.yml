services:

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - dodgygeezers_test

  event-service:
      # restart: "no"
    ports:
      - 8001:8001
      - 5679:5679
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event-service
    volumes:
    - ./app:/app/app
    - ./pyproject.toml:/app/pyproject.toml
    - ./uv.lock:/app/uv.lock
    # command: sleep infinity  # Infinite loop to keep container alive doing nothing
    command:
      - python3
      - -Xfrozen_modules=off
      - -m
      - debugpy
      - --listen
      - 0.0.0.0:5679
      - --wait-for-client
      - -m
      - uvicorn
      - app.main:app
      - --reload
      - --host
      - "0.0.0.0"
      - --port
      - "8001"
    env_file:
      - .env.development
    environment:
      - DB_HOST=postgres
      - PYDEVD_DISABLE_FILE_VALIDATION=1
    networks:
      - dodgygeezers_test
    depends_on:
      - redis

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-worker
    command:
      - celery
      - -A
      - app.core.celery_config.celery_app
      - worker
      - --loglevel=info
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env.development
    networks:
      - dodgygeezers_test
    depends_on:
      - redis
      - event-service

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-beat
    command:
      - celery
      - -A
      - app.core.celery_config.celery_app
      - beat
      - --loglevel=info
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env.development
    networks:
      - dodgygeezers_test
    depends_on:
      - redis
      - event-service

networks:
  dodgygeezers_test:
    # driver: bridge
    external: true